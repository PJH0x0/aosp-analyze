@startuml
participant PackageInstallerSession as pis
participant PackageManagerService as pkms
participant PkMS.HandlerParams as hp
participant PkMS.InstallParams as ip
participant PkMS.FileInstallArgs as fia
participant PackageParser2 as pp2
participant Settings as s
pis -> pkms++ : installStage()
activate ip
pkms -> hp++ : startCopy()
hp -> ip : handleStartCopy()
ip -> pkms++ : createInstallArgs()
pkms -> ip : FileInstallArgs
activate fia
ip -> ip : handleReturnCode()
ip -> fia : copyApk()
fia -> fia : doCopyApk()
ip -> pkms : processPendingInstall()
pkms -> pkms : processInstallRequestsAsync()
pkms -> pkms++ : installPackagesTracedLI()
deactivate hp
deactivate ip
pkms -> pkms : installPackagesLI()
===preparePackageLI===
pkms -> pkms : preparePackageLI()
pkms -> pp2++ : parsePackage()
return ParsedPackage
pkms->fia : doRename()
deactivate fia
pkms->pkms : freezePackageForInstall()
===scanPackageTracedLI===
pkms->pkms : scanPackageTracedLI()
pkms->pkms : scanPackageNewLI()
pkms->pkms : scanPackageOnlyLI()
activate s
alt createNewPackage
    pkms->s : createNewSetting()
else updatePackage
    pkms->s : updatePackageSetting()
end
===optimisticallyRegisterAppId===
pkms->pkms : optimisticallyRegisterAppId()
pkms->s : registerAppIdLPw()
alt uid == 0
    s->s : acquireAndRegisterNewAppIdLPw()
else uid exist
    s->s : registerExistingAppIdLPw()
end
===reconcilePackagesLocked===
pkms->pkms : reconcilePackagesLocked()
===commitPackagesLocked===
pkms->pkms : commitPackagesLocked()
alt replace
    alt system
        pkms->pkms : disableSystemPackageLPw()
    else install app
        pkms->pkms : executeDeletePackageLIF()
    end
end
pkms->pkms : commitReconciledScanResultLocked()
pkms->pkms : commitPackageSettings()
pkms->pkms : updateSettingsLI()
pkms->s : writeLPr()
deactivate s
pkms->PermissionManagerService++ : updatePermissions()
deactivate PermissionManagerService
===executePostCommitSteps===
pkms->pkms : executePostCommitSteps()
pkms->pkms : prepareAppDataAfterInstallLIF()
pkms->ArtManagerService++ : prepareAppProfiles()
deactivate ArtManagerService
pkms->PackageDexOptimizer++ : performDexOpt()
deactivate PackageDexOptimizer
===Call back observer===
pkms->pkms : restoreAndPostInstall()
pkms->pkms-- : handlePackagePostInstall()
@enduml
